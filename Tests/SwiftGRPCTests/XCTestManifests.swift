#if !canImport(ObjectiveC)
import XCTest

extension ChannelArgumentTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ChannelArgumentTests = [
        ("testArgumentKey", testArgumentKey),
        ("testBoolArgument", testBoolArgument),
        ("testIntegerArgument", testIntegerArgument),
        ("testPracticalUse", testPracticalUse),
        ("testStringArgument", testStringArgument),
        ("testTimeIntervalArgument", testTimeIntervalArgument),
    ]
}

extension ChannelConnectivityTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ChannelConnectivityTests = [
        ("testDanglingConnectivityObserversDontCrash", testDanglingConnectivityObserversDontCrash),
        ("testMultipleConnectivityObserversAreCalled", testMultipleConnectivityObserversAreCalled),
    ]
}

extension ChannelShutdownTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ChannelShutdownTests = [
        ("testCallCloseAndReceiveThrowsWhenChannelIsShutDown", testCallCloseAndReceiveThrowsWhenChannelIsShutDown),
        ("testCallCloseThrowsWhenChannelIsShutDown", testCallCloseThrowsWhenChannelIsShutDown),
        ("testCallReceiveThrowsWhenChannelIsShutDown", testCallReceiveThrowsWhenChannelIsShutDown),
        ("testCallSendThrowsWhenChannelIsShutDown", testCallSendThrowsWhenChannelIsShutDown),
        ("testCancelsActiveCallWhenShutdownIsCalled", testCancelsActiveCallWhenShutdownIsCalled),
        ("testThrowsWhenCreatingCallWithAlreadyShutDownChannel", testThrowsWhenCreatingCallWithAlreadyShutDownChannel),
    ]
}

extension ClientCancellingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ClientCancellingTests = [
        ("testBidirectionalStreaming", testBidirectionalStreaming),
        ("testClientStreaming", testClientStreaming),
        ("testServerStreaming", testServerStreaming),
        ("testUnary", testUnary),
    ]
}

extension ClientTestExample {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ClientTestExample = [
        ("testBidirectionalStreaming", testBidirectionalStreaming),
        ("testClientStreaming", testClientStreaming),
        ("testServerStreaming", testServerStreaming),
        ("testUnary", testUnary),
    ]
}

extension ClientTimeoutTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ClientTimeoutTests = [
        ("testBidirectionalStreamingTimeoutPassedToReceiveMethod", testBidirectionalStreamingTimeoutPassedToReceiveMethod),
        ("testClientStreamingTimeoutAfterSending", testClientStreamingTimeoutAfterSending),
        ("testClientStreamingTimeoutBeforeSending", testClientStreamingTimeoutBeforeSending),
    ]
}

extension CompletionQueueTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CompletionQueueTests = [
        ("testCompletionQueueThrowsAfterShutdown", testCompletionQueueThrowsAfterShutdown),
    ]
}

extension ConnectionFailureTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ConnectionFailureTests = [
        ("testConnectionFailureBidirectionalStreaming", testConnectionFailureBidirectionalStreaming),
        ("testConnectionFailureClientStreaming", testConnectionFailureClientStreaming),
        ("testConnectionFailureServerStreaming", testConnectionFailureServerStreaming),
        ("testConnectionFailureUnary", testConnectionFailureUnary),
    ]
}

extension EchoTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EchoTests = [
        ("testBidirectionalStreamingBatched", testBidirectionalStreamingBatched),
        ("testBidirectionalStreamingLotsOfMessagesBatched", testBidirectionalStreamingLotsOfMessagesBatched),
        ("testBidirectionalStreamingLotsOfMessagesPingPong", testBidirectionalStreamingLotsOfMessagesPingPong),
        ("testBidirectionalStreamingPingPong", testBidirectionalStreamingPingPong),
        ("testClientStreaming", testClientStreaming),
        ("testClientStreamingLotsOfMessages", testClientStreamingLotsOfMessages),
        ("testServerStreaming", testServerStreaming),
        ("testServerStreamingLotsOfMessages", testServerStreamingLotsOfMessages),
        ("testUnary", testUnary),
        ("testUnaryLotsOfRequests", testUnaryLotsOfRequests),
    ]
}

extension EchoTestsMutualAuth {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EchoTestsMutualAuth = [
        ("testBidirectionalStreamingBatched", testBidirectionalStreamingBatched),
        ("testBidirectionalStreamingLotsOfMessagesBatched", testBidirectionalStreamingLotsOfMessagesBatched),
        ("testBidirectionalStreamingLotsOfMessagesPingPong", testBidirectionalStreamingLotsOfMessagesPingPong),
        ("testBidirectionalStreamingPingPong", testBidirectionalStreamingPingPong),
        ("testClientStreaming", testClientStreaming),
        ("testClientStreamingLotsOfMessages", testClientStreamingLotsOfMessages),
        ("testServerStreaming", testServerStreaming),
        ("testServerStreamingLotsOfMessages", testServerStreamingLotsOfMessages),
        ("testUnary", testUnary),
        ("testUnaryLotsOfRequests", testUnaryLotsOfRequests),
    ]
}

extension EchoTestsSecure {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EchoTestsSecure = [
        ("testBidirectionalStreamingBatched", testBidirectionalStreamingBatched),
        ("testBidirectionalStreamingLotsOfMessagesBatched", testBidirectionalStreamingLotsOfMessagesBatched),
        ("testBidirectionalStreamingLotsOfMessagesPingPong", testBidirectionalStreamingLotsOfMessagesPingPong),
        ("testBidirectionalStreamingPingPong", testBidirectionalStreamingPingPong),
        ("testClientStreaming", testClientStreaming),
        ("testClientStreamingLotsOfMessages", testClientStreamingLotsOfMessages),
        ("testServerStreaming", testServerStreaming),
        ("testServerStreamingLotsOfMessages", testServerStreamingLotsOfMessages),
        ("testUnary", testUnary),
        ("testUnaryLotsOfRequests", testUnaryLotsOfRequests),
    ]
}

extension MetadataTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MetadataTests = [
        ("testCopyDoesNotCorruptData", testCopyDoesNotCorruptData),
        ("testExtractData", testExtractData),
    ]
}

extension ServerCancellingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ServerCancellingTests = [
        ("testServerThrowsBidirectionalStreaming", testServerThrowsBidirectionalStreaming),
        ("testServerThrowsClientStreaming", testServerThrowsClientStreaming),
        ("testServerThrowsServerStreaming", testServerThrowsServerStreaming),
        ("testServerThrowsUnary", testServerThrowsUnary),
    ]
}

extension ServerTestExample {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ServerTestExample = [
        ("testBidirectionalStreaming", testBidirectionalStreaming),
        ("testClientStreaming", testClientStreaming),
        ("testServerStreaming", testServerStreaming),
        ("testUnary", testUnary),
    ]
}

extension ServerThrowingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ServerThrowingTests = [
        ("testServerThrowsBidirectionalStreaming", testServerThrowsBidirectionalStreaming),
        ("testServerThrowsClientStreaming", testServerThrowsClientStreaming),
        ("testServerThrowsServerStreaming", testServerThrowsServerStreaming),
        ("testServerThrowsUnary_noTrailingMetadataCorruptionAfterOriginalTrailingMetadataGetsReleased", testServerThrowsUnary_noTrailingMetadataCorruptionAfterOriginalTrailingMetadataGetsReleased),
        ("testServerThrowsUnary", testServerThrowsUnary),
    ]
}

extension ServerTimeoutTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ServerTimeoutTests = [
        ("testTimeoutBidirectionalStreaming", testTimeoutBidirectionalStreaming),
        ("testTimeoutClientStreaming", testTimeoutClientStreaming),
        ("testTimeoutServerStreaming", testTimeoutServerStreaming),
        ("testTimeoutUnary", testTimeoutUnary),
    ]
}

extension ServiceClientTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ServiceClientTests = [
        ("testSharedChannelStillWorksAfterFirstUnaryClientCompletes", testSharedChannelStillWorksAfterFirstUnaryClientCompletes),
        ("testSharingChannelBetweenClientsUnaryAsync", testSharingChannelBetweenClientsUnaryAsync),
    ]
}

extension gRPCTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__gRPCTests = [
        ("testConnectivity", testConnectivity),
        ("testConnectivitySecure", testConnectivitySecure),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ChannelArgumentTests.__allTests__ChannelArgumentTests),
        testCase(ChannelConnectivityTests.__allTests__ChannelConnectivityTests),
        testCase(ChannelShutdownTests.__allTests__ChannelShutdownTests),
        testCase(ClientCancellingTests.__allTests__ClientCancellingTests),
        testCase(ClientTestExample.__allTests__ClientTestExample),
        testCase(ClientTimeoutTests.__allTests__ClientTimeoutTests),
        testCase(CompletionQueueTests.__allTests__CompletionQueueTests),
        testCase(ConnectionFailureTests.__allTests__ConnectionFailureTests),
        testCase(EchoTests.__allTests__EchoTests),
        testCase(EchoTestsMutualAuth.__allTests__EchoTestsMutualAuth),
        testCase(EchoTestsSecure.__allTests__EchoTestsSecure),
        testCase(MetadataTests.__allTests__MetadataTests),
        testCase(ServerCancellingTests.__allTests__ServerCancellingTests),
        testCase(ServerTestExample.__allTests__ServerTestExample),
        testCase(ServerThrowingTests.__allTests__ServerThrowingTests),
        testCase(ServerTimeoutTests.__allTests__ServerTimeoutTests),
        testCase(ServiceClientTests.__allTests__ServiceClientTests),
        testCase(gRPCTests.__allTests__gRPCTests),
    ]
}
#endif
