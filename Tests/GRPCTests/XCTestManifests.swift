#if !canImport(ObjectiveC)
import XCTest

extension AnyServiceClientTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnyServiceClientTests = [
        ("testBidirectionalStreaming", testBidirectionalStreaming),
        ("testClientStreaming", testClientStreaming),
        ("testServerStreaming", testServerStreaming),
        ("testUnary", testUnary),
    ]
}

extension CallStartBehaviorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CallStartBehaviorTests = [
        ("testFastFailure", testFastFailure),
    ]
}

extension ChannelTransportTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ChannelTransportTests = [
        ("testBidirectionalHappyPath", testBidirectionalHappyPath),
        ("testBufferedWritesAreFailedOnClose", testBufferedWritesAreFailedOnClose),
        ("testChannelBecomesInactive", testChannelBecomesInactive),
        ("testChannelError", testChannelError),
        ("testErrorsAreNotAlwaysStatus", testErrorsAreNotAlwaysStatus),
        ("testInboundMethodsAfterShutdown", testInboundMethodsAfterShutdown),
        ("testOutboundMethodsAfterShutdown", testOutboundMethodsAfterShutdown),
        ("testTimeoutAfterActivating", testTimeoutAfterActivating),
        ("testTimeoutBeforeActivating", testTimeoutBeforeActivating),
        ("testTimeoutMidRPC", testTimeoutMidRPC),
        ("testUnaryHappyPath", testUnaryHappyPath),
    ]
}

extension ClientCancellingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ClientCancellingTests = [
        ("testBidirectionalStreaming", testBidirectionalStreaming),
        ("testClientStreaming", testClientStreaming),
        ("testServerStreaming", testServerStreaming),
        ("testUnary", testUnary),
    ]
}

extension ClientClosedChannelTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ClientClosedChannelTests = [
        ("testBidirectionalStreamingOnClosedConnection", testBidirectionalStreamingOnClosedConnection),
        ("testBidirectionalStreamingWhenConnectionIsClosedBetweenMessages", testBidirectionalStreamingWhenConnectionIsClosedBetweenMessages),
        ("testBidirectionalStreamingWithNoPromiseWhenConnectionIsClosedBetweenMessages", testBidirectionalStreamingWithNoPromiseWhenConnectionIsClosedBetweenMessages),
        ("testClientStreamingOnClosedConnection", testClientStreamingOnClosedConnection),
        ("testClientStreamingWhenConnectionIsClosedBetweenMessages", testClientStreamingWhenConnectionIsClosedBetweenMessages),
        ("testServerStreamingOnClosedConnection", testServerStreamingOnClosedConnection),
        ("testUnaryOnClosedConnection", testUnaryOnClosedConnection),
    ]
}

extension ClientConnectionBackoffTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ClientConnectionBackoffTests = [
        ("testClientConnectionFailsWithNoBackoff", testClientConnectionFailsWithNoBackoff),
        ("testClientConnectionFailureIsLimited", testClientConnectionFailureIsLimited),
        ("testClientEventuallyConnects", testClientEventuallyConnects),
        ("testClientReconnectsAutomatically", testClientReconnectsAutomatically),
    ]
}

extension ClientTLSFailureTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ClientTLSFailureTests = [
        ("testClientConnectionFailsWhenHostnameIsNotValid", testClientConnectionFailsWhenHostnameIsNotValid),
        ("testClientConnectionFailsWhenServerIsUnknown", testClientConnectionFailsWhenServerIsUnknown),
    ]
}

extension ClientTLSHostnameOverrideTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ClientTLSHostnameOverrideTests = [
        ("testTLSWithHostnameOverride", testTLSWithHostnameOverride),
        ("testTLSWithoutHostnameOverride", testTLSWithoutHostnameOverride),
    ]
}

extension ClientThrowingWhenServerReturningErrorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ClientThrowingWhenServerReturningErrorTests = [
        ("testBidirectionalStreaming", testBidirectionalStreaming),
        ("testClientStreaming", testClientStreaming),
        ("testServerStreaming", testServerStreaming),
        ("testUnary", testUnary),
    ]
}

extension ClientTimeoutTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ClientTimeoutTests = [
        ("testBidirectionalStreamingTimeoutAfterSending", testBidirectionalStreamingTimeoutAfterSending),
        ("testBidirectionalStreamingTimeoutBeforeSending", testBidirectionalStreamingTimeoutBeforeSending),
        ("testClientStreamingTimeoutAfterSending", testClientStreamingTimeoutAfterSending),
        ("testClientStreamingTimeoutBeforeSending", testClientStreamingTimeoutBeforeSending),
        ("testServerStreamingTimeoutAfterSending", testServerStreamingTimeoutAfterSending),
        ("testUnaryTimeoutAfterSending", testUnaryTimeoutAfterSending),
    ]
}

extension ConnectionBackoffTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ConnectionBackoffTests = [
        ("testBackoffDoesNotExceedMaximum", testBackoffDoesNotExceedMaximum),
        ("testBackoffWithJitter", testBackoffWithJitter),
        ("testBackoffWithNoJitter", testBackoffWithNoJitter),
        ("testConnectionBackoffHasLimitedRetries", testConnectionBackoffHasLimitedRetries),
        ("testConnectionBackoffWhenLimitedToZeroRetries", testConnectionBackoffWhenLimitedToZeroRetries),
        ("testConnectionBackoffWithNoRetries", testConnectionBackoffWithNoRetries),
        ("testConnectionTimeoutAlwaysGreaterThanOrEqualToMinimum", testConnectionTimeoutAlwaysGreaterThanOrEqualToMinimum),
        ("testExpectedValuesWithNoJitter", testExpectedValuesWithNoJitter),
    ]
}

extension ConnectionManagerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ConnectionManagerTests = [
        ("testConnectAndDisconnect", testConnectAndDisconnect),
        ("testConnectAndIdle", testConnectAndIdle),
        ("testConnectAndThenBecomeInactive", testConnectAndThenBecomeInactive),
        ("testConnectFromIdleFailsWithNoReconnect", testConnectFromIdleFailsWithNoReconnect),
        ("testConnectOnSecondAttempt", testConnectOnSecondAttempt),
        ("testDoomedOptimisticChannelFromConnecting", testDoomedOptimisticChannelFromConnecting),
        ("testDoomedOptimisticChannelFromIdle", testDoomedOptimisticChannelFromIdle),
        ("testDoubleIdle", testDoubleIdle),
        ("testGoAwayWhenReady", testGoAwayWhenReady),
        ("testIdleShutdown", testIdleShutdown),
        ("testIdleTimeoutWhenThereAreActiveStreams", testIdleTimeoutWhenThereAreActiveStreams),
        ("testOptimisticChannelFromShutdown", testOptimisticChannelFromShutdown),
        ("testOptimisticChannelFromTransientFailure", testOptimisticChannelFromTransientFailure),
        ("testShutdownWhileActive", testShutdownWhileActive),
        ("testShutdownWhileConnecting", testShutdownWhileConnecting),
        ("testShutdownWhileShutdown", testShutdownWhileShutdown),
        ("testShutdownWhileTransientFailure", testShutdownWhileTransientFailure),
        ("testTransientFailureWhileActive", testTransientFailureWhileActive),
        ("testTransientFailureWhileReady", testTransientFailureWhileReady),
    ]
}

extension ConnectivityStateMonitorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ConnectivityStateMonitorTests = [
        ("testDelegateOnlyCalledForChanges", testDelegateOnlyCalledForChanges),
    ]
}

extension DebugChannelInitializerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DebugChannelInitializerTests = [
        ("testDebugChannelInitializerIsCalled", testDebugChannelInitializerIsCalled),
    ]
}

extension DelegatingErrorHandlerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DelegatingErrorHandlerTests = [
        ("testUncleanShutdownIsIgnored", testUncleanShutdownIsIgnored),
    ]
}

extension EchoTestClientTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EchoTestClientTests = [
        ("testGetWithRealClientAndServer", testGetWithRealClientAndServer),
        ("testGetWithTestClient", testGetWithTestClient),
        ("testUpdateWithRealClientAndServer", testUpdateWithRealClientAndServer),
        ("testUpdateWithTestClient", testUpdateWithTestClient),
    ]
}

extension FakeChannelTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FakeChannelTests = [
        ("testBidirectional", testBidirectional),
        ("testHasResponseStreamsEnqueued", testHasResponseStreamsEnqueued),
        ("testMissingResponse", testMissingResponse),
        ("testResponseIsReallyDequeued", testResponseIsReallyDequeued),
        ("testUnary", testUnary),
    ]
}

extension FakeResponseStreamExampleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FakeResponseStreamExampleTests = [
        ("testBidirectionalResponseOrdering", testBidirectionalResponseOrdering),
        ("testBidirectionalStreaming", testBidirectionalStreaming),
        ("testBidirectionalStreamingResponseStream", testBidirectionalStreamingResponseStream),
        ("testBidirectionalStreamingSendAfterEnd", testBidirectionalStreamingSendAfterEnd),
        ("testBidirectionalWithCustomInitialMetadata", testBidirectionalWithCustomInitialMetadata),
        ("testClientStreaming", testClientStreaming),
        ("testClientStreamingResponseStream", testClientStreamingResponseStream),
        ("testInitialMetadataIsSentAutomatically", testInitialMetadataIsSentAutomatically),
        ("testMissingResponseStream", testMissingResponseStream),
        ("testServerStreaming", testServerStreaming),
        ("testServerStreamingResponseStream", testServerStreamingResponseStream),
        ("testUnary", testUnary),
        ("testUnaryError", testUnaryError),
        ("testUnaryResponseOrdering", testUnaryResponseOrdering),
        ("testUnaryResponseStream", testUnaryResponseStream),
        ("testUnaryWithRequestHandler", testUnaryWithRequestHandler),
        ("testUnaryWithTrailingMetadata", testUnaryWithTrailingMetadata),
        ("testWeGetAllRequestParts", testWeGetAllRequestParts),
        ("testWriteAfterEndFails", testWriteAfterEndFails),
    ]
}

extension FakeResponseStreamTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FakeResponseStreamTests = [
        ("testStreamingIgnoresExtraMessages", testStreamingIgnoresExtraMessages),
        ("testStreamingSendInitialMetadata", testStreamingSendInitialMetadata),
        ("testStreamingSendMessage", testStreamingSendMessage),
        ("testUnaryIgnoresExtraMessages", testUnaryIgnoresExtraMessages),
        ("testUnarySendError", testUnarySendError),
        ("testUnarySendMessage", testUnarySendMessage),
    ]
}

extension FunctionalTestsAnonymousClient {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FunctionalTestsAnonymousClient = [
        ("testBidirectionalStreamingBatched", testBidirectionalStreamingBatched),
        ("testBidirectionalStreamingLotsOfMessagesBatched", testBidirectionalStreamingLotsOfMessagesBatched),
        ("testBidirectionalStreamingLotsOfMessagesPingPong", testBidirectionalStreamingLotsOfMessagesPingPong),
        ("testBidirectionalStreamingPingPong", testBidirectionalStreamingPingPong),
        ("testClientStreaming", testClientStreaming),
        ("testClientStreamingLotsOfMessages", testClientStreamingLotsOfMessages),
        ("testServerStreaming", testServerStreaming),
        ("testServerStreamingLotsOfMessages", testServerStreamingLotsOfMessages),
        ("testUnary", testUnary),
        ("testUnaryEmptyRequest", testUnaryEmptyRequest),
        ("testUnaryLotsOfRequests", testUnaryLotsOfRequests),
        ("testUnaryWithLargeData", testUnaryWithLargeData),
    ]
}

extension FunctionalTestsAnonymousClientNIOTS {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FunctionalTestsAnonymousClientNIOTS = [
        ("testBidirectionalStreamingBatched", testBidirectionalStreamingBatched),
        ("testBidirectionalStreamingLotsOfMessagesBatched", testBidirectionalStreamingLotsOfMessagesBatched),
        ("testBidirectionalStreamingLotsOfMessagesPingPong", testBidirectionalStreamingLotsOfMessagesPingPong),
        ("testBidirectionalStreamingPingPong", testBidirectionalStreamingPingPong),
        ("testClientStreaming", testClientStreaming),
        ("testClientStreamingLotsOfMessages", testClientStreamingLotsOfMessages),
        ("testServerStreaming", testServerStreaming),
        ("testServerStreamingLotsOfMessages", testServerStreamingLotsOfMessages),
        ("testUnary", testUnary),
        ("testUnaryEmptyRequest", testUnaryEmptyRequest),
        ("testUnaryLotsOfRequests", testUnaryLotsOfRequests),
        ("testUnaryWithLargeData", testUnaryWithLargeData),
    ]
}

extension FunctionalTestsInsecureTransport {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FunctionalTestsInsecureTransport = [
        ("testBidirectionalStreamingBatched", testBidirectionalStreamingBatched),
        ("testBidirectionalStreamingLotsOfMessagesBatched", testBidirectionalStreamingLotsOfMessagesBatched),
        ("testBidirectionalStreamingLotsOfMessagesPingPong", testBidirectionalStreamingLotsOfMessagesPingPong),
        ("testBidirectionalStreamingPingPong", testBidirectionalStreamingPingPong),
        ("testClientStreaming", testClientStreaming),
        ("testClientStreamingLotsOfMessages", testClientStreamingLotsOfMessages),
        ("testServerStreaming", testServerStreaming),
        ("testServerStreamingLotsOfMessages", testServerStreamingLotsOfMessages),
        ("testUnary", testUnary),
        ("testUnaryEmptyRequest", testUnaryEmptyRequest),
        ("testUnaryLotsOfRequests", testUnaryLotsOfRequests),
        ("testUnaryWithLargeData", testUnaryWithLargeData),
    ]
}

extension FunctionalTestsInsecureTransportNIOTS {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FunctionalTestsInsecureTransportNIOTS = [
        ("testBidirectionalStreamingBatched", testBidirectionalStreamingBatched),
        ("testBidirectionalStreamingLotsOfMessagesBatched", testBidirectionalStreamingLotsOfMessagesBatched),
        ("testBidirectionalStreamingLotsOfMessagesPingPong", testBidirectionalStreamingLotsOfMessagesPingPong),
        ("testBidirectionalStreamingPingPong", testBidirectionalStreamingPingPong),
        ("testClientStreaming", testClientStreaming),
        ("testClientStreamingLotsOfMessages", testClientStreamingLotsOfMessages),
        ("testServerStreaming", testServerStreaming),
        ("testServerStreamingLotsOfMessages", testServerStreamingLotsOfMessages),
        ("testUnary", testUnary),
        ("testUnaryEmptyRequest", testUnaryEmptyRequest),
        ("testUnaryLotsOfRequests", testUnaryLotsOfRequests),
        ("testUnaryWithLargeData", testUnaryWithLargeData),
    ]
}

extension FunctionalTestsMutualAuthentication {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FunctionalTestsMutualAuthentication = [
        ("testBidirectionalStreamingBatched", testBidirectionalStreamingBatched),
        ("testBidirectionalStreamingLotsOfMessagesBatched", testBidirectionalStreamingLotsOfMessagesBatched),
        ("testBidirectionalStreamingLotsOfMessagesPingPong", testBidirectionalStreamingLotsOfMessagesPingPong),
        ("testBidirectionalStreamingPingPong", testBidirectionalStreamingPingPong),
        ("testClientStreaming", testClientStreaming),
        ("testClientStreamingLotsOfMessages", testClientStreamingLotsOfMessages),
        ("testServerStreaming", testServerStreaming),
        ("testServerStreamingLotsOfMessages", testServerStreamingLotsOfMessages),
        ("testUnary", testUnary),
        ("testUnaryEmptyRequest", testUnaryEmptyRequest),
        ("testUnaryLotsOfRequests", testUnaryLotsOfRequests),
        ("testUnaryWithLargeData", testUnaryWithLargeData),
    ]
}

extension FunctionalTestsMutualAuthenticationNIOTS {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FunctionalTestsMutualAuthenticationNIOTS = [
        ("testBidirectionalStreamingBatched", testBidirectionalStreamingBatched),
        ("testBidirectionalStreamingLotsOfMessagesBatched", testBidirectionalStreamingLotsOfMessagesBatched),
        ("testBidirectionalStreamingLotsOfMessagesPingPong", testBidirectionalStreamingLotsOfMessagesPingPong),
        ("testBidirectionalStreamingPingPong", testBidirectionalStreamingPingPong),
        ("testClientStreaming", testClientStreaming),
        ("testClientStreamingLotsOfMessages", testClientStreamingLotsOfMessages),
        ("testServerStreaming", testServerStreaming),
        ("testServerStreamingLotsOfMessages", testServerStreamingLotsOfMessages),
        ("testUnary", testUnary),
        ("testUnaryEmptyRequest", testUnaryEmptyRequest),
        ("testUnaryLotsOfRequests", testUnaryLotsOfRequests),
        ("testUnaryWithLargeData", testUnaryWithLargeData),
    ]
}

extension GRPCClientStateMachineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GRPCClientStateMachineTests = [
        ("testReceiveEndOfResponseStreamFromActive", testReceiveEndOfResponseStreamFromActive),
        ("testReceiveEndOfResponseStreamFromClientActiveServerIdle", testReceiveEndOfResponseStreamFromClientActiveServerIdle),
        ("testReceiveEndOfResponseStreamFromClientClosedServerActive", testReceiveEndOfResponseStreamFromClientClosedServerActive),
        ("testReceiveEndOfResponseStreamFromClientClosedServerIdle", testReceiveEndOfResponseStreamFromClientClosedServerIdle),
        ("testReceiveEndOfResponseStreamFromClosed", testReceiveEndOfResponseStreamFromClosed),
        ("testReceiveEndOfResponseStreamFromIdle", testReceiveEndOfResponseStreamFromIdle),
        ("testReceiveEndOfResponseStreamWithNonIntStatus", testReceiveEndOfResponseStreamWithNonIntStatus),
        ("testReceiveEndOfResponseStreamWithStatusAndMessage", testReceiveEndOfResponseStreamWithStatusAndMessage),
        ("testReceiveEndOfResponseStreamWithStatus", testReceiveEndOfResponseStreamWithStatus),
        ("testReceiveEndOfResponseStreamWithUnknownStatus", testReceiveEndOfResponseStreamWithUnknownStatus),
        ("testReceiveResponseFromActive", testReceiveResponseFromActive),
        ("testReceiveResponseFromClientActiveServerIdle", testReceiveResponseFromClientActiveServerIdle),
        ("testReceiveResponseFromClientClosedServerActive", testReceiveResponseFromClientClosedServerActive),
        ("testReceiveResponseFromClientClosedServerIdle", testReceiveResponseFromClientClosedServerIdle),
        ("testReceiveResponseFromClosed", testReceiveResponseFromClosed),
        ("testReceiveResponseFromIdle", testReceiveResponseFromIdle),
        ("testReceiveResponseHeadersFromActive", testReceiveResponseHeadersFromActive),
        ("testReceiveResponseHeadersFromClientActiveServerIdle", testReceiveResponseHeadersFromClientActiveServerIdle),
        ("testReceiveResponseHeadersFromClientClosedServerActive", testReceiveResponseHeadersFromClientClosedServerActive),
        ("testReceiveResponseHeadersFromClientClosedServerIdle", testReceiveResponseHeadersFromClientClosedServerIdle),
        ("testReceiveResponseHeadersFromClosed", testReceiveResponseHeadersFromClosed),
        ("testReceiveResponseHeadersFromIdle", testReceiveResponseHeadersFromIdle),
        ("testReceiveResponseHeadersWithInvalidContentType", testReceiveResponseHeadersWithInvalidContentType),
        ("testReceiveResponseHeadersWithNotOkStatus", testReceiveResponseHeadersWithNotOkStatus),
        ("testReceiveResponseHeadersWithOkStatus", testReceiveResponseHeadersWithOkStatus),
        ("testReceiveResponseHeadersWithoutContentType", testReceiveResponseHeadersWithoutContentType),
        ("testReceiveResponseHeadersWithSupportedCompressionMechanism", testReceiveResponseHeadersWithSupportedCompressionMechanism),
        ("testReceiveResponseHeadersWithUnknownCompressionMechanism", testReceiveResponseHeadersWithUnknownCompressionMechanism),
        ("testReceiveResponseHeadersWithUnsupportedCompressionMechanism", testReceiveResponseHeadersWithUnsupportedCompressionMechanism),
        ("testReceiveTooManyRequests", testReceiveTooManyRequests),
        ("testReceiveTooManyRequestsInOneBuffer", testReceiveTooManyRequestsInOneBuffer),
        ("testReceiveTrailersOnlyEndOfResponseStreamWithInvalidContentType", testReceiveTrailersOnlyEndOfResponseStreamWithInvalidContentType),
        ("testReceiveTrailersOnlyEndOfResponseStreamWithInvalidHTTPStatusAndNoGRPCStatus", testReceiveTrailersOnlyEndOfResponseStreamWithInvalidHTTPStatusAndNoGRPCStatus),
        ("testReceiveTrailersOnlyEndOfResponseStreamWithInvalidHTTPStatusAndValidGRPCStatus", testReceiveTrailersOnlyEndOfResponseStreamWithInvalidHTTPStatusAndValidGRPCStatus),
        ("testReceiveTrailersOnlyEndOfResponseStreamWithoutContentType", testReceiveTrailersOnlyEndOfResponseStreamWithoutContentType),
        ("testSendEndOfRequestStreamFromActive", testSendEndOfRequestStreamFromActive),
        ("testSendEndOfRequestStreamFromClientActiveServerIdle", testSendEndOfRequestStreamFromClientActiveServerIdle),
        ("testSendEndOfRequestStreamFromClientClosedServerActive", testSendEndOfRequestStreamFromClientClosedServerActive),
        ("testSendEndOfRequestStreamFromClientClosedServerIdle", testSendEndOfRequestStreamFromClientClosedServerIdle),
        ("testSendEndOfRequestStreamFromClosed", testSendEndOfRequestStreamFromClosed),
        ("testSendEndOfRequestStreamFromIdle", testSendEndOfRequestStreamFromIdle),
        ("testSendRequestFromActive", testSendRequestFromActive),
        ("testSendRequestFromClientActiveServerIdle", testSendRequestFromClientActiveServerIdle),
        ("testSendRequestFromClientClosedServerActive", testSendRequestFromClientClosedServerActive),
        ("testSendRequestFromClientClosedServerIdle", testSendRequestFromClientClosedServerIdle),
        ("testSendRequestFromClosed", testSendRequestFromClosed),
        ("testSendRequestFromIdle", testSendRequestFromIdle),
        ("testSendRequestHeaders", testSendRequestHeaders),
        ("testSendRequestHeadersFromActive", testSendRequestHeadersFromActive),
        ("testSendRequestHeadersFromClientActiveServerIdle", testSendRequestHeadersFromClientActiveServerIdle),
        ("testSendRequestHeadersFromClientClosedServerActive", testSendRequestHeadersFromClientClosedServerActive),
        ("testSendRequestHeadersFromClientClosedServerIdle", testSendRequestHeadersFromClientClosedServerIdle),
        ("testSendRequestHeadersFromClosed", testSendRequestHeadersFromClosed),
        ("testSendRequestHeadersFromIdle", testSendRequestHeadersFromIdle),
        ("testSendRequestHeadersNormalizesCustomMetadata", testSendRequestHeadersNormalizesCustomMetadata),
        ("testSendRequestHeadersWithCustomUserAgent", testSendRequestHeadersWithCustomUserAgent),
        ("testSendRequestHeadersWithNoCompressionForRequests", testSendRequestHeadersWithNoCompressionForRequests),
        ("testSendRequestHeadersWithNoCompressionForResponses", testSendRequestHeadersWithNoCompressionForResponses),
        ("testSendRequestHeadersWithNoCompressionInEitherDirection", testSendRequestHeadersWithNoCompressionInEitherDirection),
        ("testSendTooManyRequestsFromActive", testSendTooManyRequestsFromActive),
        ("testSendTooManyRequestsFromClientActiveServerIdle", testSendTooManyRequestsFromClientActiveServerIdle),
        ("testSendTooManyRequestsFromClosed", testSendTooManyRequestsFromClosed),
        ("testSimpleBidirectionalActiveFlow", testSimpleBidirectionalActiveFlow),
        ("testSimpleClientActiveFlow", testSimpleClientActiveFlow),
        ("testSimpleServerActiveFlow", testSimpleServerActiveFlow),
        ("testSimpleUnaryFlow", testSimpleUnaryFlow),
    ]
}

extension GRPCCustomPayloadTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GRPCCustomPayloadTests = [
        ("testCustomPayload", testCustomPayload),
        ("testCustomPayloadClientStreaming", testCustomPayloadClientStreaming),
        ("testCustomPayloadServerStreaming", testCustomPayloadServerStreaming),
        ("testCustomPayloadUnary", testCustomPayloadUnary),
        ("testNoDeserializationOnTheClient", testNoDeserializationOnTheClient),
    ]
}

extension GRPCIdleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GRPCIdleTests = [
        ("testClientIdleTimeout", testClientIdleTimeout),
        ("testServerIdleTimeout", testServerIdleTimeout),
    ]
}

extension GRPCInsecureInteroperabilityTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GRPCInsecureInteroperabilityTests = [
        ("testCacheableUnary", testCacheableUnary),
        ("testCancelAfterBegin", testCancelAfterBegin),
        ("testCancelAfterFirstResponse", testCancelAfterFirstResponse),
        ("testClientCompressedStreaming", testClientCompressedStreaming),
        ("testClientCompressedUnary", testClientCompressedUnary),
        ("testClientStreaming", testClientStreaming),
        ("testCustomMetadata", testCustomMetadata),
        ("testEmptyStream", testEmptyStream),
        ("testEmptyUnary", testEmptyUnary),
        ("testLargeUnary", testLargeUnary),
        ("testPingPong", testPingPong),
        ("testServerCompressedStreaming", testServerCompressedStreaming),
        ("testServerCompressedUnary", testServerCompressedUnary),
        ("testServerStreaming", testServerStreaming),
        ("testSpecialStatusAndMessage", testSpecialStatusAndMessage),
        ("testStatusCodeAndMessage", testStatusCodeAndMessage),
        ("testTimeoutOnSleepingServer", testTimeoutOnSleepingServer),
        ("testUnimplementedMethod", testUnimplementedMethod),
        ("testUnimplementedService", testUnimplementedService),
    ]
}

extension GRPCPingHandlerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GRPCPingHandlerTests = [
        ("testClosingStreamWithoutPermitCalls", testClosingStreamWithoutPermitCalls),
        ("testClosingStreamWithPermitCalls", testClosingStreamWithPermitCalls),
        ("testIntervalTooEarlyWithCallInFlight", testIntervalTooEarlyWithCallInFlight),
        ("testIntervalTooEarlyWithoutCallsInFlight", testIntervalTooEarlyWithoutCallsInFlight),
        ("testIntervalWithCallInFlight", testIntervalWithCallInFlight),
        ("testIntervalWithCallNoLongerInFlight", testIntervalWithCallNoLongerInFlight),
        ("testIntervalWithCallNoLongerInFlightButPermitted", testIntervalWithCallNoLongerInFlightButPermitted),
        ("testIntervalWithoutCallsInFlight", testIntervalWithoutCallsInFlight),
        ("testIntervalWithoutCallsInFlightButPermitted", testIntervalWithoutCallsInFlightButPermitted),
        ("testPingStrikesOnClientShouldHaveNoEffect", testPingStrikesOnClientShouldHaveNoEffect),
        ("testPingStrikesOnServer", testPingStrikesOnServer),
        ("testPingWithoutDataResultsInPongForClient", testPingWithoutDataResultsInPongForClient),
        ("testPingWithoutDataResultsInPongForServer", testPingWithoutDataResultsInPongForServer),
    ]
}

extension GRPCSecureInteroperabilityTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GRPCSecureInteroperabilityTests = [
        ("testCacheableUnary", testCacheableUnary),
        ("testCancelAfterBegin", testCancelAfterBegin),
        ("testCancelAfterFirstResponse", testCancelAfterFirstResponse),
        ("testClientCompressedStreaming", testClientCompressedStreaming),
        ("testClientCompressedUnary", testClientCompressedUnary),
        ("testClientStreaming", testClientStreaming),
        ("testCustomMetadata", testCustomMetadata),
        ("testEmptyStream", testEmptyStream),
        ("testEmptyUnary", testEmptyUnary),
        ("testLargeUnary", testLargeUnary),
        ("testPingPong", testPingPong),
        ("testServerCompressedStreaming", testServerCompressedStreaming),
        ("testServerCompressedUnary", testServerCompressedUnary),
        ("testServerStreaming", testServerStreaming),
        ("testSpecialStatusAndMessage", testSpecialStatusAndMessage),
        ("testStatusCodeAndMessage", testStatusCodeAndMessage),
        ("testTimeoutOnSleepingServer", testTimeoutOnSleepingServer),
        ("testUnimplementedMethod", testUnimplementedMethod),
        ("testUnimplementedService", testUnimplementedService),
    ]
}

extension GRPCServerCodecHandlerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GRPCServerCodecHandlerTests = [
        ("testDeserializationFailure", testDeserializationFailure),
        ("testSerializationFailure", testSerializationFailure),
    ]
}

extension GRPCServerRequestRoutingHandlerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GRPCServerRequestRoutingHandlerTests = [
        ("testImplementedMethodReconfiguresPipeline", testImplementedMethodReconfiguresPipeline),
        ("testInvalidGRPCContentTypeReturnsUnsupportedMediaType", testInvalidGRPCContentTypeReturnsUnsupportedMediaType),
        ("testUnimplementedMethodReturnsUnimplementedStatus", testUnimplementedMethodReturnsUnimplementedStatus),
    ]
}

extension GRPCStatusCodeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GRPCStatusCodeTests = [
        ("testBadGateway", testBadGateway),
        ("testBadRequest", testBadRequest),
        ("testCodeFromRawValue", testCodeFromRawValue),
        ("testForbidden", testForbidden),
        ("testGatewayTimeout", testGatewayTimeout),
        ("testNotFound", testNotFound),
        ("testServiceUnavailable", testServiceUnavailable),
        ("testStatusCodeAndMessageAreRespectedForNon200Responses", testStatusCodeAndMessageAreRespectedForNon200Responses),
        ("testTooManyRequests", testTooManyRequests),
        ("testUnauthorized", testUnauthorized),
    ]
}

extension GRPCStatusMessageMarshallerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GRPCStatusMessageMarshallerTests = [
        ("testASCIIMarshallingAndUnmarshalling", testASCIIMarshallingAndUnmarshalling),
        ("testPercentMarshallingAndUnmarshalling", testPercentMarshallingAndUnmarshalling),
        ("testUnicodeMarshalling", testUnicodeMarshalling),
    ]
}

extension GRPCStatusTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GRPCStatusTests = [
        ("testStatusDescriptionWithMessage", testStatusDescriptionWithMessage),
        ("testStatusDescriptionWithoutMessage", testStatusDescriptionWithoutMessage),
    ]
}

extension GRPCTimeoutTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GRPCTimeoutTests = [
        ("testRoundingHoursTimeout", testRoundingHoursTimeout),
        ("testRoundingMicrosecondsTimeout", testRoundingMicrosecondsTimeout),
        ("testRoundingMillisecondsTimeout", testRoundingMillisecondsTimeout),
        ("testRoundingMinutesTimeout", testRoundingMinutesTimeout),
        ("testRoundingNanosecondsTimeout", testRoundingNanosecondsTimeout),
        ("testRoundingNegativeTimeout", testRoundingNegativeTimeout),
        ("testRoundingSecondsTimeout", testRoundingSecondsTimeout),
        ("testTimeoutFromDeadline", testTimeoutFromDeadline),
        ("testTimeoutFromDistantFuture", testTimeoutFromDistantFuture),
        ("testTimeoutFromPastDeadline", testTimeoutFromPastDeadline),
    ]
}

extension GRPCTypeSizeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GRPCTypeSizeTests = [
        ("testGRPCClientRequestPart", testGRPCClientRequestPart),
        ("testGRPCClientResponsePart", testGRPCClientResponsePart),
        ("testGRPCStatus", testGRPCStatus),
    ]
}

extension HTTP1ToGRPCServerCodecTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HTTP1ToGRPCServerCodecTests = [
        ("testErrorsOnlyHappenOnce", testErrorsOnlyHappenOnce),
        ("testMultipleMessagesFromSingleBodyPart", testMultipleMessagesFromSingleBodyPart),
        ("testReentrantMessageDelivery", testReentrantMessageDelivery),
        ("testSingleMessageFromMultipleBodyParts", testSingleMessageFromMultipleBodyParts),
    ]
}

extension HeaderNormalizationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HeaderNormalizationTests = [
        ("testHeadersAreNormalizedForBidirectionalStreaming", testHeadersAreNormalizedForBidirectionalStreaming),
        ("testHeadersAreNormalizedForClientStreaming", testHeadersAreNormalizedForClientStreaming),
        ("testHeadersAreNormalizedForServerStreaming", testHeadersAreNormalizedForServerStreaming),
        ("testHeadersAreNormalizedForUnary", testHeadersAreNormalizedForUnary),
    ]
}

extension ImmediatelyFailingProviderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ImmediatelyFailingProviderTests = [
        ("testBidirectionalStreaming", testBidirectionalStreaming),
        ("testClientStreaming", testClientStreaming),
        ("testServerStreaming", testServerStreaming),
        ("testUnary", testUnary),
    ]
}

extension LazyEventLoopPromiseTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LazyEventLoopPromiseTests = [
        ("testGetFutureAfterError", testGetFutureAfterError),
        ("testGetFutureAfterSuccess", testGetFutureAfterSuccess),
        ("testGetFutureBeforeError", testGetFutureBeforeError),
        ("testGetFutureBeforeSuccess", testGetFutureBeforeSuccess),
        ("testGetFutureMultipleTimes", testGetFutureMultipleTimes),
        ("testMultipleResolutionsIgnored", testMultipleResolutionsIgnored),
        ("testNoFuture", testNoFuture),
    ]
}

extension LengthPrefixedMessageReaderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LengthPrefixedMessageReaderTests = [
        ("testAppendReadsAllBytes", testAppendReadsAllBytes),
        ("testExcessiveBytesAreDiscarded", testExcessiveBytesAreDiscarded),
        ("testNextMessageDeliveredAcrossMultipleByteBuffers", testNextMessageDeliveredAcrossMultipleByteBuffers),
        ("testNextMessageDoesNotThrowWhenCompressionFlagIsExpectedButNotSet", testNextMessageDoesNotThrowWhenCompressionFlagIsExpectedButNotSet),
        ("testNextMessageReturnsMessageForZeroLengthMessage", testNextMessageReturnsMessageForZeroLengthMessage),
        ("testNextMessageReturnsMessageIsAppendedInOneBuffer", testNextMessageReturnsMessageIsAppendedInOneBuffer),
        ("testNextMessageReturnsNilWhenNoBytesAppended", testNextMessageReturnsNilWhenNoBytesAppended),
        ("testNextMessageReturnsNilWhenNoMessageBytesAreAvailable", testNextMessageReturnsNilWhenNoMessageBytesAreAvailable),
        ("testNextMessageReturnsNilWhenNoMessageLengthIsAvailable", testNextMessageReturnsNilWhenNoMessageLengthIsAvailable),
        ("testNextMessageReturnsNilWhenNotAllMessageBytesAreAvailable", testNextMessageReturnsNilWhenNotAllMessageBytesAreAvailable),
        ("testNextMessageReturnsNilWhenNotAllMessageLengthIsAvailable", testNextMessageReturnsNilWhenNotAllMessageLengthIsAvailable),
        ("testNextMessageThrowsWhenCompressionFlagIsSetButNotExpected", testNextMessageThrowsWhenCompressionFlagIsSetButNotExpected),
        ("testNextMessageWhenMultipleMessagesAreBuffered", testNextMessageWhenMultipleMessagesAreBuffered),
    ]
}

extension LengthPrefixedMessageWriterTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LengthPrefixedMessageWriterTests = [
        ("testWriteBytesWithLeadingSpaceAndCompression", testWriteBytesWithLeadingSpaceAndCompression),
        ("testWriteBytesWithLeadingSpaceAndNoCompression", testWriteBytesWithLeadingSpaceAndNoCompression),
        ("testWriteBytesWithNoLeadingSpaceAndCompression", testWriteBytesWithNoLeadingSpaceAndCompression),
        ("testWriteBytesWithNoLeadingSpaceOrCompression", testWriteBytesWithNoLeadingSpaceOrCompression),
    ]
}

extension MessageCompressionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MessageCompressionTests = [
        ("testCompressedRequestsUncompressedResponses", testCompressedRequestsUncompressedResponses),
        ("testCompressedRequestWithCompressionNotSupportedOnServer", testCompressedRequestWithCompressionNotSupportedOnServer),
        ("testDecompressionLimitIsRespectedByClientForStreamingCall", testDecompressionLimitIsRespectedByClientForStreamingCall),
        ("testDecompressionLimitIsRespectedByClientForUnaryCall", testDecompressionLimitIsRespectedByClientForUnaryCall),
        ("testDecompressionLimitIsRespectedByServerForStreamingCall", testDecompressionLimitIsRespectedByServerForStreamingCall),
        ("testDecompressionLimitIsRespectedByServerForUnaryCall", testDecompressionLimitIsRespectedByServerForUnaryCall),
        ("testServerCanDecompressNonAdvertisedButSupportedCompression", testServerCanDecompressNonAdvertisedButSupportedCompression),
        ("testServerCompressesResponseWithDifferentAlgorithmToRequest", testServerCompressesResponseWithDifferentAlgorithmToRequest),
        ("testUncompressedRequestsCompressedResponses", testUncompressedRequestsCompressedResponses),
    ]
}

extension MessageEncodingHeaderValidatorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MessageEncodingHeaderValidatorTests = [
        ("testNoCompressionWhenEnabled", testNoCompressionWhenEnabled),
        ("testNoCompressionWhenExplicitlyDisabled", testNoCompressionWhenExplicitlyDisabled),
        ("testSupportedAlgorithm", testSupportedAlgorithm),
        ("testSupportedButExplicitlyDisabled", testSupportedButExplicitlyDisabled),
        ("testSupportedButNotAdvertisedAlgorithm", testSupportedButNotAdvertisedAlgorithm),
        ("testUnsupportedButEnabled", testUnsupportedButEnabled),
    ]
}

extension PlatformSupportTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PlatformSupportTests = [
        ("testMakeClientBootstrapReturnsClientBootstrapForEventLoop", testMakeClientBootstrapReturnsClientBootstrapForEventLoop),
        ("testMakeClientBootstrapReturnsClientBootstrapForMultiThreadedGroup", testMakeClientBootstrapReturnsClientBootstrapForMultiThreadedGroup),
        ("testMakeClientBootstrapReturnsNIOTSConnectionBootstrapForNIOTSGroup", testMakeClientBootstrapReturnsNIOTSConnectionBootstrapForNIOTSGroup),
        ("testMakeClientBootstrapReturnsNIOTSConnectionBootstrapForQoSEventLoop", testMakeClientBootstrapReturnsNIOTSConnectionBootstrapForQoSEventLoop),
        ("testMakeEventLoopGroupReturnsMultiThreadedGroupForPosix", testMakeEventLoopGroupReturnsMultiThreadedGroupForPosix),
        ("testMakeEventLoopGroupReturnsNIOTSGroupForNetworkFramework", testMakeEventLoopGroupReturnsNIOTSGroupForNetworkFramework),
        ("testMakeServerBootstrapReturnsNIOTSListenerBootstrapForNIOTSGroup", testMakeServerBootstrapReturnsNIOTSListenerBootstrapForNIOTSGroup),
        ("testMakeServerBootstrapReturnsNIOTSListenerBootstrapForQoSEventLoop", testMakeServerBootstrapReturnsNIOTSListenerBootstrapForQoSEventLoop),
        ("testMakeServerBootstrapReturnsServerBootstrapForEventLoop", testMakeServerBootstrapReturnsServerBootstrapForEventLoop),
        ("testMakeServerBootstrapReturnsServerBootstrapForMultiThreadedGroup", testMakeServerBootstrapReturnsServerBootstrapForMultiThreadedGroup),
        ("testRequiresZeroLengthWorkaroundWithMTELG", testRequiresZeroLengthWorkaroundWithMTELG),
        ("testRequiresZeroLengthWorkaroundWithNetworkFramework", testRequiresZeroLengthWorkaroundWithNetworkFramework),
    ]
}

extension ReadStateTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ReadStateTests = [
        ("testReadManyMessagesForManyExpectedMessages", testReadManyMessagesForManyExpectedMessages),
        ("testReadOneMessageForManyExpectedMessages", testReadOneMessageForManyExpectedMessages),
        ("testReadOneMessageForOneExpectedMessages", testReadOneMessageForOneExpectedMessages),
        ("testReadTooManyMessagesForOneExpectedMessages", testReadTooManyMessagesForOneExpectedMessages),
        ("testReadWhenNoExpectedMessages", testReadWhenNoExpectedMessages),
        ("testReadWithLeftOverBytesForOneExpectedMessage", testReadWithLeftOverBytesForOneExpectedMessage),
    ]
}

extension RequestIDProviderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RequestIDProviderTests = [
        ("testAutogenerated", testAutogenerated),
        ("testGenerator", testGenerator),
        ("testUserDefined", testUserDefined),
    ]
}

extension ServerDelayedThrowingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ServerDelayedThrowingTests = [
        ("testBidirectionalStreaming", testBidirectionalStreaming),
        ("testClientStreaming", testClientStreaming),
        ("testServerStreaming", testServerStreaming),
        ("testUnary", testUnary),
    ]
}

extension ServerErrorDelegateTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ServerErrorDelegateTests = [
        ("testTransformLibraryError_whenTransformingErrorToStatus_bidirectionalStreaming", testTransformLibraryError_whenTransformingErrorToStatus_bidirectionalStreaming),
        ("testTransformLibraryError_whenTransformingErrorToStatus_clientStreaming", testTransformLibraryError_whenTransformingErrorToStatus_clientStreaming),
        ("testTransformLibraryError_whenTransformingErrorToStatus_serverStreaming", testTransformLibraryError_whenTransformingErrorToStatus_serverStreaming),
        ("testTransformLibraryError_whenTransformingErrorToStatus_unary", testTransformLibraryError_whenTransformingErrorToStatus_unary),
        ("testTransformLibraryError_whenTransformingErrorToStatusAndMetadata_bidirectionalStreaming", testTransformLibraryError_whenTransformingErrorToStatusAndMetadata_bidirectionalStreaming),
        ("testTransformLibraryError_whenTransformingErrorToStatusAndMetadata_clientStreaming", testTransformLibraryError_whenTransformingErrorToStatusAndMetadata_clientStreaming),
        ("testTransformLibraryError_whenTransformingErrorToStatusAndMetadata_serverStreaming", testTransformLibraryError_whenTransformingErrorToStatusAndMetadata_serverStreaming),
        ("testTransformLibraryError_whenTransformingErrorToStatusAndMetadata_unary", testTransformLibraryError_whenTransformingErrorToStatusAndMetadata_unary),
    ]
}

extension ServerErrorTransformingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ServerErrorTransformingTests = [
        ("testBidirectionalStreaming", testBidirectionalStreaming),
        ("testClientStreaming", testClientStreaming),
        ("testServerStreaming", testServerStreaming),
        ("testUnary", testUnary),
    ]
}

extension ServerTLSErrorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ServerTLSErrorTests = [
        ("testErrorIsLoggedWhenSSLContextErrors", testErrorIsLoggedWhenSSLContextErrors),
    ]
}

extension ServerThrowingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ServerThrowingTests = [
        ("testBidirectionalStreaming", testBidirectionalStreaming),
        ("testClientStreaming", testClientStreaming),
        ("testServerStreaming", testServerStreaming),
        ("testUnary", testUnary),
    ]
}

extension ServerWebTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ServerWebTests = [
        ("testServerStreaming", testServerStreaming),
        ("testUnary", testUnary),
        ("testUnaryLotsOfRequests", testUnaryLotsOfRequests),
        ("testUnaryWithoutRequestMessage", testUnaryWithoutRequestMessage),
    ]
}

extension StopwatchTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StopwatchTests = [
        ("testElapsed", testElapsed),
    ]
}

extension StreamingRequestClientCallTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StreamingRequestClientCallTests = [
        ("testSendMessages", testSendMessages),
    ]
}

extension TimeLimitTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TimeLimitTests = [
        ("testDeadline", testDeadline),
        ("testMakeDeadline", testMakeDeadline),
        ("testTimeout", testTimeout),
    ]
}

extension ZeroLengthWriteTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ZeroLengthWriteTests = [
        ("testZeroLengthWriteTestNetworkFrameworkInsecure", testZeroLengthWriteTestNetworkFrameworkInsecure),
        ("testZeroLengthWriteTestNetworkFrameworkSecure", testZeroLengthWriteTestNetworkFrameworkSecure),
        ("testZeroLengthWriteTestPosixInsecure", testZeroLengthWriteTestPosixInsecure),
        ("testZeroLengthWriteTestPosixSecure", testZeroLengthWriteTestPosixSecure),
    ]
}

extension ZlibTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ZlibTests = [
        ("testAbsoluteDecompressionLimit", testAbsoluteDecompressionLimit),
        ("testAbsoluteDecompressionLimitMaximumSize", testAbsoluteDecompressionLimitMaximumSize),
        ("testCompressionAndDecompressionOfASCIIBytes", testCompressionAndDecompressionOfASCIIBytes),
        ("testCompressionAndDecompressionOfHardToCompressData", testCompressionAndDecompressionOfHardToCompressData),
        ("testCompressionAndDecompressionOfZeros", testCompressionAndDecompressionOfZeros),
        ("testCompressionAndDecompressionWithResets", testCompressionAndDecompressionWithResets),
        ("testDecompressionAutomaticallyResizesOutputBuffer", testDecompressionAutomaticallyResizesOutputBuffer),
        ("testDecompressThrowsOnGibberish", testDecompressThrowsOnGibberish),
        ("testRatioDecompressionLimit", testRatioDecompressionLimit),
        ("testRatioDecompressionLimitMaximumSize", testRatioDecompressionLimitMaximumSize),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AnyServiceClientTests.__allTests__AnyServiceClientTests),
        testCase(CallStartBehaviorTests.__allTests__CallStartBehaviorTests),
        testCase(ChannelTransportTests.__allTests__ChannelTransportTests),
        testCase(ClientCancellingTests.__allTests__ClientCancellingTests),
        testCase(ClientClosedChannelTests.__allTests__ClientClosedChannelTests),
        testCase(ClientConnectionBackoffTests.__allTests__ClientConnectionBackoffTests),
        testCase(ClientTLSFailureTests.__allTests__ClientTLSFailureTests),
        testCase(ClientTLSHostnameOverrideTests.__allTests__ClientTLSHostnameOverrideTests),
        testCase(ClientThrowingWhenServerReturningErrorTests.__allTests__ClientThrowingWhenServerReturningErrorTests),
        testCase(ClientTimeoutTests.__allTests__ClientTimeoutTests),
        testCase(ConnectionBackoffTests.__allTests__ConnectionBackoffTests),
        testCase(ConnectionManagerTests.__allTests__ConnectionManagerTests),
        testCase(ConnectivityStateMonitorTests.__allTests__ConnectivityStateMonitorTests),
        testCase(DebugChannelInitializerTests.__allTests__DebugChannelInitializerTests),
        testCase(DelegatingErrorHandlerTests.__allTests__DelegatingErrorHandlerTests),
        testCase(EchoTestClientTests.__allTests__EchoTestClientTests),
        testCase(FakeChannelTests.__allTests__FakeChannelTests),
        testCase(FakeResponseStreamExampleTests.__allTests__FakeResponseStreamExampleTests),
        testCase(FakeResponseStreamTests.__allTests__FakeResponseStreamTests),
        testCase(FunctionalTestsAnonymousClient.__allTests__FunctionalTestsAnonymousClient),
        testCase(FunctionalTestsAnonymousClientNIOTS.__allTests__FunctionalTestsAnonymousClientNIOTS),
        testCase(FunctionalTestsInsecureTransport.__allTests__FunctionalTestsInsecureTransport),
        testCase(FunctionalTestsInsecureTransportNIOTS.__allTests__FunctionalTestsInsecureTransportNIOTS),
        testCase(FunctionalTestsMutualAuthentication.__allTests__FunctionalTestsMutualAuthentication),
        testCase(FunctionalTestsMutualAuthenticationNIOTS.__allTests__FunctionalTestsMutualAuthenticationNIOTS),
        testCase(GRPCClientStateMachineTests.__allTests__GRPCClientStateMachineTests),
        testCase(GRPCCustomPayloadTests.__allTests__GRPCCustomPayloadTests),
        testCase(GRPCIdleTests.__allTests__GRPCIdleTests),
        testCase(GRPCInsecureInteroperabilityTests.__allTests__GRPCInsecureInteroperabilityTests),
        testCase(GRPCPingHandlerTests.__allTests__GRPCPingHandlerTests),
        testCase(GRPCSecureInteroperabilityTests.__allTests__GRPCSecureInteroperabilityTests),
        testCase(GRPCServerCodecHandlerTests.__allTests__GRPCServerCodecHandlerTests),
        testCase(GRPCServerRequestRoutingHandlerTests.__allTests__GRPCServerRequestRoutingHandlerTests),
        testCase(GRPCStatusCodeTests.__allTests__GRPCStatusCodeTests),
        testCase(GRPCStatusMessageMarshallerTests.__allTests__GRPCStatusMessageMarshallerTests),
        testCase(GRPCStatusTests.__allTests__GRPCStatusTests),
        testCase(GRPCTimeoutTests.__allTests__GRPCTimeoutTests),
        testCase(GRPCTypeSizeTests.__allTests__GRPCTypeSizeTests),
        testCase(HTTP1ToGRPCServerCodecTests.__allTests__HTTP1ToGRPCServerCodecTests),
        testCase(HeaderNormalizationTests.__allTests__HeaderNormalizationTests),
        testCase(ImmediatelyFailingProviderTests.__allTests__ImmediatelyFailingProviderTests),
        testCase(LazyEventLoopPromiseTests.__allTests__LazyEventLoopPromiseTests),
        testCase(LengthPrefixedMessageReaderTests.__allTests__LengthPrefixedMessageReaderTests),
        testCase(LengthPrefixedMessageWriterTests.__allTests__LengthPrefixedMessageWriterTests),
        testCase(MessageCompressionTests.__allTests__MessageCompressionTests),
        testCase(MessageEncodingHeaderValidatorTests.__allTests__MessageEncodingHeaderValidatorTests),
        testCase(PlatformSupportTests.__allTests__PlatformSupportTests),
        testCase(ReadStateTests.__allTests__ReadStateTests),
        testCase(RequestIDProviderTests.__allTests__RequestIDProviderTests),
        testCase(ServerDelayedThrowingTests.__allTests__ServerDelayedThrowingTests),
        testCase(ServerErrorDelegateTests.__allTests__ServerErrorDelegateTests),
        testCase(ServerErrorTransformingTests.__allTests__ServerErrorTransformingTests),
        testCase(ServerTLSErrorTests.__allTests__ServerTLSErrorTests),
        testCase(ServerThrowingTests.__allTests__ServerThrowingTests),
        testCase(ServerWebTests.__allTests__ServerWebTests),
        testCase(StopwatchTests.__allTests__StopwatchTests),
        testCase(StreamingRequestClientCallTests.__allTests__StreamingRequestClientCallTests),
        testCase(TimeLimitTests.__allTests__TimeLimitTests),
        testCase(ZeroLengthWriteTests.__allTests__ZeroLengthWriteTests),
        testCase(ZlibTests.__allTests__ZlibTests),
    ]
}
#endif
