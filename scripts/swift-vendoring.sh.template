%YAML 1.2
--- |
  #!/bin/sh
  #
  # This file has been automatically generated from a template file.
  # Please make modifications to `templates/swiftgrpc-vendoring.sh.template`
  # instead. This file can be regenerated from the template by running
  # `tools/buildgen/generate_projects.sh`.
  #
  #
  # Copyright 2017, gRPC Authors All rights reserved.
  #
  # Licensed under the Apache License, Version 2.0 (the "License");
  # you may not use this file except in compliance with the License.
  # You may obtain a copy of the License at
  #
  #     http://www.apache.org/licenses/LICENSE-2.0
  #
  # Unless required by applicable law or agreed to in writing, software
  # distributed under the License is distributed on an "AS IS" BASIS,
  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  # See the License for the specific language governing permissions and
  # limitations under the License.
  #
  # This script vendors the gRPC Core library into the
  # CgRPC module in a form suitable for building with
  # the Swift Package Manager.
  #

  <%!
  def grpc_private_files(libs):
    out = []
    for lib in libs:
      if lib.name in ("grpc", "gpr"):
        out += lib.get('headers', [])
        out += lib.get('src', [])
    return [f for f in out]

  def grpc_public_headers(libs):
    out = []
    for lib in libs:
      if lib.name in ("grpc", "gpr"):
        out += lib.get('public_headers', [])
    return out

  def grpc_private_headers(libs):
    out = []
    for lib in libs:
      if lib.name in ("grpc", "gpr"):
        out += lib.get('headers', [])
    return [f for f in out]

  def sh_multiline_list(files, indent):
    return ('\n' + indent*' ').join('\'%s\'' % f for f in files)
  %>
  public_headers=(${sh_multiline_list(grpc_public_headers(libs), 2)})

  source_files=(${sh_multiline_list(grpc_private_files(libs), 2)})

  private_headers=(${sh_multiline_list(grpc_private_headers(libs), 2)})

